name: Update Gradle Version

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-gradle-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout branch
        # run: git checkout bugfix/get-latest-gradle-version
        run: |
          echo "Checkout branch"
          echo "git status"
          git status
          

      - name: Git checkout
        run: |
          echo "Git checkout"
          echo "git checkout bugfix/get-latest-gradle-version"
          git checkout bugfix/get-latest-gradle-version
          echo "git status"
          git status

      - name: Get latest Gradle release version
        id: gradle_version
        run: |
          echo "Get latest Gradle release version"
          # Fetch the latest version from the Gradle releases
          latest_release=$(curl -s https://api.github.com/repos/gradle/gradle/releases | \
            jq -r '[.[] | select(.prerelease == false)] | .[0].name')

          if [ "$latest_release" == "null" ] || [ -z "$latest_release" ]; then
            echo "No valid release found."
            exit 1
          fi

          echo "Latest release: $latest_release"
          echo "::set-output name=version::$latest_release"

      - name: Update files and create a new branch with the commit
        run: |
          new_version="${{ steps.gradle_version.outputs.version }}"
          echo "New Gradle version: $new_version"

          # Create a new branch locally
          git checkout -b update-${new_version}

          # Update Gradle version in relevant files
          sed -i "s/<version>.*<\/version>/<version>${new_version}<\/version>/" Gradle/gradle.nuspec
          release_notes_url="https://docs.gradle.org/${new_version}/release-notes.html"
          sed -i "s|<releaseNotes>.*<\/releaseNotes>|<releaseNotes>[Gradle Release Notes](${release_notes_url})<\/releaseNotes>|" Gradle/gradle.nuspec
          sed -i "s/\$version = '.*'/\$version = '${new_version}'/" Gradle/tools/chocolateyinstall.ps1
          sed -i "s/\$packageVersion = '.*'/\$packageVersion = '${new_version}'/" Gradle/tools/chocolateybeforemodify.ps1

          # Add and commit changes
          git add Gradle/gradle.nuspec Gradle/tools/chocolateyinstall.ps1 Gradle/tools/chocolateybeforemodify.ps1
          git commit -m "Update Gradle to $new_version"

          # Push the new branch with the commit to the remote repository
          git push --set-upstream origin update-${new_version}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Update Gradle to version ${{ steps.gradle_version.outputs.version }}"
          body: "Automatically updates Gradle to the latest version ${{ steps.gradle_version.outputs.version }}."
          branch: "update-${{ steps.gradle_version.outputs.version }}"
          base: bugfix/get-latest-gradle-version
          labels: "new-version"
